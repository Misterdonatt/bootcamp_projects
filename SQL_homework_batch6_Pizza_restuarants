---resturant owner
---5 Tables
---1xfact, 4x Dimention
---search google,how to add foreign key
---write SQL 3-5 queries analyze data
---1x sub queries/with
--split command
.mode markdown
.header on

-- fact_table
CREATE TABLE fact_orders(
	order_id INT PRIMARY KEY,
	order_datetime TEXT,
  order_details_id INT,
	customer_id INT,
  pizza_category_id INT,
  sales_id INT,
  payment_methods_id INT,
FOREIGN KEY(order_details_id) REFERENCES dim_pizza_ingredients (order_details_id)  
FOREIGN KEY(customer_id) REFERENCES dim_membership(customer_id)
FOREIGN KEY(pizza_category_id) REFERENCES dim_pizzacategory(pizza_category_id)
FOREIGN KEY(sales_id) REFERENCES dim_sales(sales_id)
FOREIGN KEY(payment_methods_id) REFERENCES dim_payment(payment_methods_id)
);

INSERT INTO fact_orders VALUES
  (1,'2022-10-01 11:05:00',1,1,5,1,1),
  (2,'2022-10-01 12:31:00',2,2,4,1,1),
  (3,'2022-10-01 12:45:00',3,3,3,2,2),
  (4,'2022-10-02 18:00:00',4,4,2,3,2),
  (5,'2022-10-03 12:15:00' ,5,5,1,1,2)
  ;

-- dim_pizza_name_size (1)
CREATE TABLE dim_pizza_name_size(
  pizza_id int Primary Key,
  pizza_name_size text,
  pizza_name text,
  unit_price real,
  unit_cost real
);
INSERT INTO dim_pizza_name_size VALUES
  (1, 'bbq_ckn_l','The Barbecue Chicken Pizza',23.65,20.00),
  (2, 'hawaiian_l','The Hawaiian Pizza',24.56,21.35),
  (3, 'spinach_supr_l','The Spinach Supreme Pizza',30.00,15.30),
  (4, 'ital_supr_l','The Italian Supreme Pizza',22.22,19.85),
  (5, 'thai_ckn_l','The Thai Chicken Pizza',39.05,32.11);

-- dim_pizza_ingredients (2)
CREATE TABLE dim_pizza_ingredients(
  order_details_id int Primary Key,
  pizza_ingredients text
);
INSERT INTO dim_pizza_ingredients VALUES
  (1, 'Barbecued Chicken, Red Peppers, Green Peppers, Tomatoes, Red Onions, Barbecue Sauce'),
  (2, 'Sliced Ham, Pineapple, Mozzarella Cheese'),
  (3, 'Spinach, Red Onions, Pepperoni, Tomatoes, Artichokes, Kalamata Olives, Garlic, Asiago Cheese'),
  (4, 'Calabrese Salami, Capocollo, Tomatoes, Red Onions, Green Olives, Garlic'),
  (5, 'Chicken, Pineapple, Tomatoes, Red Peppers, Thai Sweet Chilli Sauce');

-- dim_pizza_name_size (3)
CREATE TABLE dim_membership(
  customer_id int Primary Key,
  customer_name TEXT,
  phone_number TEXT,
  email TEXT,
  segment TEXT
);
INSERT INTO dim_membership VALUES
  (1,'Misterdonatt','0888366326','Misterdonatt@lgoogle.com','Loyalty'),
  (2,'Buzz','0924444444','Buzz@lgoogle.com','Sleeper'),
  (3,'Woody','0881234567','Woody@lgoogle.com','New Customer'),
  (4,'Harry','0623456775','Harry@lgoogle.com','Champion'),
  (5,'Lisa','091234567','Lisa@lgoogle.com','Need Attention');

-- dim_pizzacategory (4)
create table dim_pizzacategory(
  pizza_category_id int Primary Key,
  pizzacategory text
 )
;
insert into dim_pizzacategory VALUES
	  (1,'Thai Style'),
    (2,'Veggie'),
    (3,'Supreme'),
    (4,'Classic'),
    (5,'Chicken')
;

-- dim_dim_sale (5)
CREATE table dim_sales(
  sales_id int primary key,
  shift_work TEXT,
  sale_name TEXT
 )
 ;
 insert into dim_sales VALUES
 	  (1,'Day Shift','Oath'),
    (2,'Day Shift','Fluck'),
    (3,'Night Shift','Boy') 
;
-- dim_sale (6)
create table dim_payment(
  payment_methods_id int primary key,
  payment_name text
 );
 insert into dim_payment VALUES
 ('1','Cash'),
 ('2','Credit Card')
;

-- create bridge
CREATE TABLE bridge_order_pizza(
  order_id int,
  pizza_id int,
  quantity int,
  FOREIGN KEY(order_id) REFERENCES fact_orders(order_id),
  FOREIGN KEY(pizza_id) REFERENCES dim_pizza_name_size (pizza_id)
);
INSERT INTO bridge_order_pizza VALUES
  (1, 2, 1),
  (1, 3, 1),
  (1, 4, 2),
  (2, 3, 1),
  (2, 2, 2),
  (3, 4, 1),
  (3, 2, 2),
  (4, 2, 1),
  (4, 1, 3),
  (4, 3, 1),
  (5, 3, 2),
  (5, 2, 1),
  (5, 4, 2),
  (5, 1, 2);

-- average spending by each segment (1)
WITH joined_table AS (
  SELECT 
      seg.segment,
  	  brd.quantity,
  	  piz.unit_price
  FROM fact_orders as ord
  JOIN bridge_order_pizza AS brd on brd.order_id = ord.order_id
  JOIN dim_pizza_name_size AS piz ON brd.pizza_id = piz.pizza_id
  JOIN dim_membership AS seg ON seg.customer_id = ord.customer_id
)
SELECT
	segment,
  ROUND(AVG(quantity * unit_price),2) AS avg_spending
FROM joined_table
GROUP BY 1
order BY 2 desc;

-- average spending by pizza categoty (2)
WITH joined_table_2 AS (
  SELECT 
      cat.pizzacategory,
  	  brd.quantity,
  	  piz.unit_price
  FROM fact_orders as ord
  JOIN bridge_order_pizza AS brd on brd.order_id = ord.order_id
  JOIN dim_pizzacategory AS cat on cat.pizza_category_id = ord.pizza_category_id
  JOIN dim_pizza_name_size AS piz ON brd.pizza_id = piz.pizza_id
)
SELECT
	pizzacategory,
  ROUND(AVG(quantity * unit_price),2) AS avg_spending
FROM joined_table_2
GROUP BY 1
order BY 2 desc;

-- Identidy profits by pizza name (2)
WITH joined_table_3 AS (
  SELECT 
      piz.pizza_name,
      piz.unit_cost,
  	  brd.quantity,
  	  piz.unit_price
  FROM fact_orders as ord
  JOIN bridge_order_pizza AS brd on brd.order_id = ord.order_id
  JOIN dim_pizzacategory AS cat on cat.pizza_category_id = ord.pizza_category_id
  JOIN dim_pizza_name_size AS piz ON brd.pizza_id = piz.pizza_id
)
SELECT
	pizza_name,
  SUM(quantity),
  SUM(unit_price*quantity) AS total_sales,
  SUM(unit_cost*quantity) AS total_costs,
  ROUND(SUM(unit_price*quantity) - SUM(unit_cost*quantity),2) AS net_profits
FROM joined_table_3
GROUP BY 1
ORDER BY 3 desc
;
