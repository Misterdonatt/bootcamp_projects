# homework 01
# chatbot (rule-based)
# ordering pizz

# menu_pizza_data
size = c('Large', 'Medium', 'Small')
location = c('Central Festival','Tesco Lotus','BigC')
menu <- data.frame(
  'face' = c('Hawaiian', 'Vegetarian Paradise', 'Super Bacon', 'Extreme Cheese','Seafood Island'),
  'price_large'   = c(300, 350, 400, 455, 600),
  'price_medium'  = c(240, 300, 340, 450, 500),
  'price_small'   = c(200, 250, 270, 290, 340)
)
topping <- data.frame(
  'items' = c('Cheese','Double Cheese','Pineapple', 'Meat',     
            'Pepperoni','Seafood'),
  'price' = c(40,50,300,100,120,220)
)
appetizer <- data.frame(
  'items' = c('Garlic Bread','French Fries','Onion Rings'),
  'price' = c(50, 55, 60)
)
pasta <- data.frame(
  'items'= c('Marinara Spaghetti','Ebiko Cream Spaghetti','Bacon Spicy Korean Spaghetti'),
  'price' = c(129, 139, 149)
)
receipt <- list(
  'item' = c(),
  'price' = c()
)

# Function
# Save orders
note <- function(list){
  item <- list[[1]]
  price <- list[[2]]
  receipt$item <- c(receipt$item, item)
  receipt$price <- c(receipt$price, price)
  return(receipt)
}
# Choosing pizzas
pizza_order <- function(){
    print(menu)
    print('1: Hawaiian , 2: Vegetarian Paradise, 3: Super Bacon , 3: Extreme Cheese, 4: Seafood Island')
    pizza_id <- as.integer(readLines('stdin', n=1))
    print('Size (1=large, 2=medium, 3= small)')
    size <- as.integer(readLines('stdin', n=1))
    item <- menu$face[pizza_id]
    price <- menu[pizza_id,size+1]
    return(list(item,price))
  }
# Choosing toppings
topping_order <- function(){
  print(topping)
  print('1:Cheese , 2:Double Cheese ,3: Pineapple ,4:Meat,     
          5:Pepperoni ,6:Seafood')
  topping_id <- as.integer(readLines('stdin', n=1))
  item <- topping$items[topping_id]
  price <- topping[topping_id, 'price']
  return(list(item,price))
}
# Choosing appetizers 
appetizer_order <- function(){
  print(appetizer)
  print('1:Garlic Bread ,2: French Fries ,3: Onion Rings')
  appetizer_id <- as.integer(readLines('stdin', n=1))
  item <- appetizer[appetizer_id, 'items']
  price <- appetizer[appetizer_id, 'price']
  return(list(item,price))
}
# Choosing pastas 
 pasta_order <- function(){
  print(pasta)
  print('1: Marinara Spaghetti,2:Ebiko Cream Spaghetti, 3:Bacon Spicy Korean Spaghetti')
  pasta_id <- as.integer(readLines('stdin', n=1))
  item <- pasta[pasta_id, 'items']
  price <- pasta[pasta_id, 'price']
  return(list(item,price))
}
# Free delivery?
reach_500 <- function(){
  if (sum(receipt$price) < 500){
    print(paste('You need to order more',500 - sum(receipt$price),'baht to get free delivery'))
    return(TRUE)
  } else {
    print('Your bill reached 500 baht, free delivery fees!')
    return(FALSE)
  }
}
 
# Order Here!
# -------------------------------------------------------
print("Welcom to Misterdonatt Pizza!")
print("Hello My friends!")
print("How can I help you ?")
print('1. Order Pizzas , 2. Exit')

# Q2 Ordering
  action <- as.integer(readLines('stdin', n=1))
  if (action == 1){
    need_pizza <- 'y'
    while (need_pizza != 'n' ){
    receipt <- note(pizza_order())
    print('Want to order more pizza? (Y/N)')
    need_pizza <- tolower(readLines('stdin', n=1))
  }
  # Choosing toppings
  print('Do you want to add topping? (Y/N)')
  need_topping <- tolower(readLines('stdin', n=1))
  while (need_topping != 'n'){
    receipt <- note(topping_order())
    print('More topping? (Y/N)')
    need_topping <- tolower(readLines('stdin', n=1))
  }
   # Choosing appetizers
  print('Any appetizers? (Y/N)')
  need_appetizer <- tolower(readLines('stdin', n=1))
  while (need_appetizer == 'y'){
    print('Any appetizers? (Y/N)')
    receipt <- note(appetizer_order())
    print('Want more appetizers? (Y/N)')
    need_appetizer <- tolower(readLines('stdin', n=1))
  }  
    # Choosing pastas
  print('Any pastas? (Y/N)')
  need_pasta <- tolower(readLines('stdin', n=1))
  while (need_pasta == 'y'){
    print('Any pastas? (Y/N)')
    receipt <- note(pasta_order())
    print('Want more pastas? (Y/N)')
    need_pasta <- tolower(readLines('stdin', n=1))
  }
      
# Check if bill >= 500 baht
  while (reach_500 ()) {
    print('Do you want to order more? (Y/N)')
    order_more <- tolower(readLines('stdin', n=1))
    while (order_more != 'n'){
      print('What do you want to order more?')
      print("1:Pizza, 2:Topping, 3:Pasta ,4:appetizer")
      order_again <- as.integer(readLines('stdin', n=1))
      if (order_again == 1){
        receipt <- note(pizza_order())
      } else if (order_again == 2){
        receipt <- note(topping_order())
      } else if (order_again == 3){
        receipt <- note(pasta_order())
      } else if (order_again == 4){
        receipt <- note(appitizer_order())
      }
      reach_500()
      print('You want to order more? (Y/N)')
      order_more <- tolower(readLines('stdin', n=1))
    }
        
    if (order_more == 'n'){
      break
    }
  }
  total_amount <- sum(receipt$price)
   # Choose to self-pickup or delivery
  print('1:Self-pickup, 2:Delivery services')
  delivery_or <- as.integer(readLines('stdin', n=1))
  # If delivery and bill less than 500, need to pay more 50 baht
  if(delivery_or == 2 & total_amount < 500){
    receipt$item <- c(receipt$item, 'Delivery Fees')
    receipt$price <- c(receipt$price, 50)
    total_amount <- sum(receipt$price)
    print('Since your bill is less than 500 baht, you have to pay additional fee 50 baht for deliver')
  } else if(delivery_or == 2 & total_amount >= 500){
    receipt$item <- c(receipt$item, 'Delivery Fees')
    receipt$price <- c(receipt$price, 0)
  } else{
    # Self-pickup choices
    print('1:Central Festival, 2:Tesco Lotus, 3:BigC')
    branch <- as.integer(readLines('stdin', n=1))
  }
  print('Here is your receipt!')
  print(data.frame(receipt))
  print(paste('Total amount:',total_amount))
    
  # Confirm your order or confirm your order
  print('Confirm your order? (Y/N)')
  confirm <- tolower(readLines('stdin', n=1))
  while (confirm == 'n' & confirm != 'y'){
    print('You want to cancel your order? (Y/N)' )
    cancel <- tolower(readLines('stdin', n=1))
    if (cancel == 'y') {
      print('Why???')
      break
    } else if (cancel == 'n') {
      print('Confirm your order? (Y/N)')
      confirm <- tolower(readLines('stdin', n=1))
    }
  }
  if (confirm == 'y' & delivery_or ==2){
    print("Please insert your name")
    name <- readLines('stdin', n=1)
    print("Please insert your phone numbers")
    readLines('stdin', n=1)
    print("Please insert your address")
    address <- readLines('stdin', n=1)
    print(paste('Thank you!',name , 'Enjoy your meal Thank you for your order, we will be there soon!'))
  } else if (confirm == 'y'){
    print("Please insert your name")
    name <- readLines('stdin', n=1)
    print("Please insert your phone numbers")
    phone_num <- readLines('stdin',1)
    print(paste('Thank you!',name,'Your pizza are on processing and ready in 15-20 minutes See you at',location[branch]))
   }
} else{
    print('Thank you')
}

      
